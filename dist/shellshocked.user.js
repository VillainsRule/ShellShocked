// ==UserScript==
// @name         ShellShocked
// @description  an undetectable cheat for shell shockers.
// @version      1.0.0a
// @icon         https://i.imgur.com/t57csO9.png

// @author       VillainsRule
// @namespace    https://github.com/VillainsRule/ShellShocked

// @match        *://*.shellshock.io/*
// @match        *://*.math.international/*

// @grant none
// @run-at document-start

// ==/UserScript==

(() => {
    (()=>{"use strict";const e=new class{settings;constructor(){if(localStorage.getItem("settings"))try{e=JSON.parse(localStorage.getItem("settings"))}catch(e){this.initial()}else this.initial()}initial(){localStorage.removeItem("settings"),this.settings={esp:{enabled:!0,key:"v"},espLines:{enabled:!0,key:"n"},espBoxes:{enabled:!0,key:"m"},aimbot:{enabled:!0,key:"b",rightMouse:{enabled:!0,key:"l"}},menuKey:"h"},this.sync()}sync(){return localStorage.setItem("settings",JSON.stringify(this.settings)),this.get()}get(){return this.settings}set(e){return this.settings=e,this.sync()}};window.st=e;const n=e,t=btoa(Math.random().toString(32)),s=btoa(Math.random().toString(32)),i={aimbot:btoa(Math.random().toString(32)),rightmouse:btoa(Math.random().toString(32)),esp:btoa(Math.random().toString(32)),esplines:btoa(Math.random().toString(32)),espboxes:btoa(Math.random().toString(32))};let o=!1;const a=e=>2===e.button?o="pointerdown"===e.type:"";window.addEventListener("pointerdown",a),window.addEventListener("pointerup",a),n.sync(),async function(){window.XMLHttpRequest=class extends window.XMLHttpRequest{open(e,n){return n.indexOf("shellshock.js")>-1&&(this.isScript=!0),super.open(...arguments)}get response(){if(this.isScript){const e=super.response;let n,s,i,o,a;try{n=/this\.origin=new ([a-zA-Z]+)\.Vector3/.exec(e)[1],s=/([^,]+)=\[\],[^,]+=\[\],{}/.exec(e)[1],i=/"fire":document.pointerLockElement&&([^&]+)&&/.exec(e)[1],o=/createMapCells\(([^,]+),/.exec(e)[1],a=/=([a-zA-Z_$]+)\(this\.mesh,\.[0-9]+\)/.exec(e)[1]}catch(n){return e}return e.replace(o+".render()",`window['${t}'](${n},${s},${i});${o}.render()`).replace(`function ${a}`,`function ${a}(){return true;}function someFunctionWhichWillNeverBeUsedNow`).replace(/.prototype.setVisible=function\(\w\){/,".prototype.setVisible=function(eee){this.getChildTransformNodes().forEach(child=>child.setRenderingGroupId&&child.setRenderingGroupId(window.st.get().esp.enabled?1:0));")}return super.response}}}(),window.addEventListener("DOMContentLoaded",(()=>{!async function(){window.setVal=e=>{let t=n.get();"aimbot"===e?t.aimbot.enabled=!t.aimbot.enabled:"rightmouse"===e?t.aimbot.rightMouse.enabled=!t.aimbot.rightMouse.enabled:"esp"===e?t.esp.enabled=!t.esp.enabled:"esplines"===e?t.espLines.enabled=!t.espLines.enabled:"espboxes"===e&&(t.espBoxes.enabled=!t.espBoxes.enabled),n.set(t)},document.body.insertAdjacentHTML("beforeend",`\n        <style>\n        .ss_container {\n            position: absolute;\n            top: 15px;\n            right: 15px;\n            width: 50vw;\n            height: auto;\n            border: var(--ss-border-blue5);\n            background-color: var(--ss-blue3);\n            z-index: 99999;\n            padding: 2vh;\n            text-align: center;\n            border-radius: var(--ss-space-sm);\n            color: var(--ss-white);\n        }\n\n        .ss_title {\n            font-family: 'Sigmar One';\n            font-size: 4vh;\n        }\n\n        .ss_description {\n            font-size: 2.6vh;\n        }\n\n        .ss_divider {\n            width: calc(90%);\n            margin: 2vh 5%;\n        }\n\n        .ss_header {\n            font-size: 2.9vh;\n            font-family: 'Sigmar One';\n        }\n\n        .ss_cheatRow {\n            display: flex;\n            justify-content: center;\n            gap: 5vw;\n            margin-top: 1.5vh;\n        }\n\n        .ss_cheatName {\n            font-size: 2.5vh;\n            font-family: 'Sigmar One';\n        }\n\n        .ss_brokenCheat {\n            color: red;\n            cursor: pointer;\n        }\n\n        .switch {\n            position: relative;\n            display: inline-block;\n            width: 60px;\n            height: calc(4vh + 8px);\n        }\n\n        .switch input {\n            opacity: 0;\n            width: 0;\n            height: 0;\n        }\n\n        .slider {\n            position: absolute;\n            cursor: pointer;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            background-color: #ccc;\n            transition: .4s;\n            border-radius: 34px;\n        }\n\n        .slider:before {\n            position: absolute;\n            content: "";\n            height: 4vh;\n            width: 26px;\n            left: 4px;\n            bottom: 4px;\n            background-color: white;\n            transition: .4s;\n            border-radius: 50%;\n        }\n\n        input:checked + .slider {\n            background-color: #5bc75f;\n        }\n\n        input:focus + .slider {\n            box-shadow: 0 0 1px #5bc75f;\n        }\n\n        input:checked + .slider:before {\n            transform: translateX(26px);\n        }\n    </style>\n        <div class="ss_container" id="${s}">\n            <div class="ss_title">ShellShocked</div>\n            <div class="ss_description">the most advanced hack for shell shockers.</div>\n            <hr class="ss_divider" />\n            <div class="ss_header">Cheats</div>\n            <div class="ss_cheatRow">\n                <div class="ss_cheatName">Aimbot</div>\n                <div class="ss_key">key: ${n.get().aimbot.key.toUpperCase()}</div>\n                <label class="switch">\n                    <input type="checkbox" checked="${n.get().aimbot.enabled}" onchange="setVal('aimbot');" id="${i.aimbot}">\n                    <span class="slider round"></span>\n                </label>\n            </div>\n            <div class="ss_cheatRow">\n                <div class="ss_cheatName">Right Mouse Aimbot</div>\n                <div class="ss_key">key: ${n.get().aimbot.rightMouse.key.toUpperCase()}</div>\n                <label class="switch">\n                    <input type="checkbox" checked="${n.get().aimbot.rightMouse.enabled}" onchange="setVal('rightmouse');" id="${i.rightmouse}">\n                    <span class="slider round"></span>\n                </label>\n            </div>\n            <div class="ss_cheatRow">\n                <div class="ss_cheatName">ESP</div>\n                <div class="ss_key">key: ${n.get().esp.key.toUpperCase()}</div>\n                <label class="switch">\n                    <input type="checkbox" checked="${n.get().esp.enabled}" onchange="setVal('esp');" id="${i.esp}">\n                    <span class="slider round"></span>\n                </label>\n            </div>\n            <div class="ss_cheatRow">\n                <div class="ss_cheatName">ESP Lines</div>\n                <div class="ss_key">key: ${n.get().espLines.key.toUpperCase()}</div>\n                <label class="switch">\n                    <input type="checkbox" checked="${n.get().espLines.enabled}" onchange="setVal('esplines');" id="${i.esplines}">\n                    <span class="slider round"></span>\n                </label>\n            </div>\n            <div class="ss_cheatRow">\n                <div class="ss_cheatName ss_brokenCheat" onclick="alert('ESP boxes is broken.');">ESP Boxes</div>\n                <div class="ss_key">key: ${n.get().espBoxes.key.toUpperCase()}</div>\n                <label class="switch">\n                    <input type="checkbox" checked="${n.get().espBoxes.enabled}" onchange="setVal('espboxes');" id="${i.espboxes}">\n                    <span class="slider round"></span>\n                </label>\n            </div>\n        </div>\n    `)}(),window.addEventListener("keyup",(function(e){if(!document.activeElement||"INPUT"!==document.activeElement.tagName)switch(e.key.toLowerCase()){case n.get().menuKey:"none"===document.getElementById(s).style.display?document.getElementById(s).style.display="":document.getElementById(s).style.display="none";break;case n.get().aimbot.key:n.get().aimbot.enabled=!n.get().aimbot.enabled,document.getElementById(i.aimbot).checked=n.get().aimbot.enabled;break;case n.get().aimbot.rightMouse.key:n.get().aimbot.rightMouse.enabled=!n.get().aimbot.rightMouse.enabled,document.getElementById(i.rightmouse).checked=n.get().aimbot.rightMouse.enabled;break;case n.get().esp.key:n.get().esp.enabled=!n.get().esp.enabled,document.getElementById(i.esp).checked=n.get().esp.enabled;break;case n.get().espLines.key:n.get().espLines.enabled=!n.get().espLines.enabled,document.getElementById(i.esplines).checked=n.get().espLines.enabled;break;case n.get().espBoxes.key:n.get().espBoxes.enabled=!n.get().espBoxes.enabled,document.getElementById(i.espboxes).checked=n.get().espBoxes.enabled}})),async function(){window[t]=function(e,t,s){if(!s)return;let i=new e.Vector3,a=[];i.copyFrom(s.actor.mesh.position);const r=s.actor.mesh.rotation.y;i.x+=Math.sin(r),i.z+=Math.cos(r),i.y+=Math.sin(-s.pitch);for(let e=0;e<a.length;e++)a[e].playerExists=!1;for(let o=0;o<t.length;o++){const r=t[o];if(r&&r!==s){if(void 0===r.sphere){const n=new e.StandardMaterial("myMaterial",r.actor.scene);n.emissiveColor=n.diffuseColor=new e.Color3(1,0,0),n.wireframe=!0;const t=e.MeshBuilder.CreateBox("mySphere",{width:.5,height:.75,depth:.5},r.actor.scene);t.material=n,t.position.y=.3,t.parent=r.actor.mesh,r.sphere=t}if(void 0===r.lines){const n={points:[i,r.actor.mesh.position],updatable:!0},t=n.instance=e.MeshBuilder.CreateLines("lines",n,r.actor.scene);t.color=new e.Color3(1,0,0),t.alwaysSelectAsActiveMesh=!0,t.renderingGroupId=1,r.lines=t,r.lineOptions=n,a.push(t)}r.lines.playerExists=!0,r.lines=e.MeshBuilder.CreateLines("lines",r.lineOptions),r.sphere.renderingGroupId=n.get().espBoxes.enabled?1:0,r.sphere.visibility=(n.get().aimbot.enabled||n.get().espBoxes.enabled)&&s!==r&&(0===s.team||s.team!==r.team),r.lines.visibility=r.playing&&r.sphere.visibility&&n.get().espLines.enabled}}for(let e=0;e<a.length;e++)a[e].playerExists||(a[e].dispose(),a.splice(e,1));if(n.get().aimbot.enabled&&(!n.get().aimbot.rightMouse.enabled||o)&&s.playing){let e,n=1/0;for(let i=0;i<t.length;i++){const o=t[i];if(o&&o!==s&&o.playing&&(0===s.team||o.team!==s.team)){const t=Math.hypot(o.x-s.x,o.y-s.y,o.z-s.z);t<n&&(n=t,e=o)}}if(e){const n=e.actor.mesh.position.x-s.actor.mesh.position.x,t=e.actor.mesh.position.y-s.actor.mesh.position.y,i=e.actor.mesh.position.z-s.actor.mesh.position.z;s.yaw=Math.radAdd(Math.atan2(n,i),0),s.pitch=-Math.atan2(t,Math.hypot(n,i))%1.5}}}}()}))})();
})();