// ==UserScript==
// @name         ShellShocked
// @description  the most advanced hack for shell shockers.
// @version      1.1.0a
// @icon         https://i.imgur.com/t57csO9.png

// @author       VillainsRule
// @namespace    https://github.com/VillainsRule/ShellShocked

// @match        *://*.shellshock.io/*
// @match        *://*.math.international/*

// @grant none
// @run-at document-start

// ==/UserScript==

(() => {
    var e=Object.defineProperty,n=(n,t,s)=>(((n,t,s)=>{t in n?e(n,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):n[t]=s})(n,"symbol"!=typeof t?t+"":t,s),s);const t=()=>btoa(Math.random().toString(32)),s=new class{constructor(){n(this,"guiID",t()),n(this,"aimbot",t()),n(this,"rightmouse",t()),n(this,"esp",t()),n(this,"esplines",t()),n(this,"espboxes",t()),n(this,"onUpdate",t()),n(this,"settingsID",t()),n(this,"lineOrigin",t())}get(){return this}},i=new class{constructor(){if(n(this,"settings"),localStorage.getItem("settings"))try{this.settings=JSON.parse(localStorage.getItem("settings"))}catch(e){console.error(e),this.initial()}else this.initial()}initial(){localStorage.removeItem("settings"),this.settings={esp:{enabled:!0,key:"v"},espLines:{enabled:!0,key:"n"},espBoxes:{enabled:!0,key:"m"},aimbot:{enabled:"rightMouse"},menuKey:"h"},this.sync()}sync(){return localStorage.setItem("settings",JSON.stringify(this.settings)),this.get()}get(){return this.settings}set(e){return this.settings=e,this.sync()}};window[s.get().settingsID]=i;let o=!1,a=!1;const d=e=>2===e.button?o="pointerdown"===e.type:"";window.addEventListener("pointerdown",(e=>(d(e),(e=>2===e.button?a=!a:"")(e)))),window.addEventListener("pointerup",d),i.sync(),async function(){window.XMLHttpRequest=class extends window.XMLHttpRequest{open(e,n){return n.indexOf("shellshock.js")>-1&&(this.isScript=!0),super.open(...arguments)}get response(){if(this.isScript){const n=super.response;let t,i,o,a,d;try{t=/this\.origin=new ([a-zA-Z]+)\.Vector3/.exec(n)[1],i=/([^,]+)=\[\],[^,]+=\[\],{}/.exec(n)[1],o=/"fire":document.pointerLockElement&&([^&]+)&&/.exec(n)[1],a=/createMapCells\(([^,]+),/.exec(n)[1],d=/=([a-zA-Z_$]+)\(this\.mesh,\.[0-9]+\)/.exec(n)[1]}catch(e){return n}return n.replace(a+".render()",`window['${s.get().onUpdate}'](${t},${i},${o});${a}.render()`).replace("function "+d,`function ${d}(){return true;}function someFunctionWhichWillNeverBeUsedNow`).replace(/.prototype.setVisible=function\(\w\){/,`.prototype.setVisible=function(eee){this.getChildTransformNodes().forEach(child=>child.setRenderingGroupId&&child.setRenderingGroupId(window['${s.get().settingsID}'].get().esp.enabled?1:0));`)}return super.response}}}(),window.addEventListener("keyup",(function(e){if(!document.activeElement||"INPUT"!==document.activeElement.tagName)switch(e.key.toLowerCase()){case i.get().menuKey:document.getElementById(s.get().guiID)&&("none"===document.getElementById(s.get().guiID).style.display?document.getElementById(s.get().guiID).style.display="":document.getElementById(s.get().guiID).style.display="none");break;case i.get().esp.key:if(!document.getElementById(s.get().esp))return;i.get().esp.enabled=!i.get().esp.enabled,document.getElementById(s.get().esp).checked=i.get().esp.enabled;break;case i.get().espLines.key:if(!document.getElementById(s.get().esplines))return;i.get().espLines.enabled=!i.get().espLines.enabled,document.getElementById(s.get().esplines).checked=i.get().espLines.enabled;break;case i.get().espBoxes.key:if(!document.getElementById(s.get().espboxes))return;i.get().espBoxes.enabled=!i.get().espBoxes.enabled,document.getElementById(s.get().espboxes).checked=i.get().espBoxes.enabled}})),async function(){window[s.get().onUpdate]=function(e,n,t){if(!t)return;let d;window[s.get().lineOrigin]||(window[s.get().lineOrigin]=new e.Vector3),d=window[s.get().lineOrigin];let r=[];d.copyFrom(t.actor.mesh.position);const l=t.actor.mesh.rotation.y;d.x+=Math.sin(l),d.z+=Math.cos(l),d.y+=Math.sin(-t.pitch);for(let s=0;s<r.length;s++)r[s].playerExists=!1;for(let s=0;s<n.length;s++){const o=n[s];if(o&&o!==t){if(void 0===o.sphere){const n=new e.StandardMaterial("myMaterial",o.actor.scene);n.emissiveColor=n.diffuseColor=new e.Color3(1,0,0),n.wireframe=!0;const t=e.MeshBuilder.CreateBox("mySphere",{width:.5,height:.75,depth:.5},o.actor.scene);t.material=n,t.position.y=.3,t.parent=o.actor.mesh,o.sphere=t}if(void 0===o.lines){const n={points:[d,o.actor.mesh.position],updatable:!0},t=n.instance=e.MeshBuilder.CreateLines("lines",n,o.actor.scene);t.color=new e.Color3(1,0,0),t.alwaysSelectAsActiveMesh=!0,t.renderingGroupId=1,o.lines=t,o.lineOptions=n,r.push(t)}o.lines.playerExists=!0,o.lines=e.MeshBuilder.CreateLines("lines",o.lineOptions),o.sphere.renderingGroupId=i.get().espBoxes.enabled?1:0,o.sphere.visibility=(i.get().aimbot.enabled||i.get().espBoxes.enabled)&&t!==o&&(0===t.team||t.team!==o.team),o.lines.visibility=o.playing&&o.sphere.visibility&&i.get().espLines.enabled}}for(let s=0;s<r.length;s++)r[s].playerExists||(r[s].dispose(),r.splice(s,1));if(("on"===i.get().aimbot.enabled||"rightMouse"===i.get().aimbot.enabled&&o||"trackpad"===i.get().aimbot.enabled&&a)&&t.playing){let e,s=1/0;for(let i=0;i<n.length;i++){const o=n[i];if(o&&o!==t&&o.playing&&(0===t.team||o.team!==t.team)){const n=Math.hypot(o.x-t.x,o.y-t.y,o.z-t.z);s>n&&(s=n,e=o)}}if(e){const n=e.actor.mesh.position.x-t.actor.mesh.position.x,s=e.actor.mesh.position.y-t.actor.mesh.position.y,i=e.actor.mesh.position.z-t.actor.mesh.position.z;t.yaw=Math.radAdd(Math.atan2(n,i),0),t.pitch=-Math.atan2(s,Math.hypot(n,i))%1.5}}}}(),window.addEventListener("DOMContentLoaded",(()=>async function(){document.body.insertAdjacentHTML("beforeend",`\n        <style>\n        .ssd_container {\n            position: absolute;\n            top: 15px;\n            right: 15px;\n            width: 60vw;\n            height: auto;\n            border: var(--ss-border-blue5);\n            background-color: var(--ss-blue3);\n            z-index: 99999;\n            padding: 2vh;\n            text-align: center;\n            border-radius: var(--ss-space-sm);\n            color: var(--ss-white);\n        }\n\n        .ssd_title {\n            font-family: 'Sigmar One';\n            font-size: 4vh;\n        }\n\n        .ssd_description {\n            font-size: 2.6vh;\n        }\n\n        .ssd_divider {\n            width: calc(90%);\n            margin: 2vh 5%;\n        }\n\n        .ssd_header {\n            font-size: 2.9vh;\n            font-family: 'Sigmar One';\n        }\n\n        .ssd_cheatGrid {\n            display: grid;\n            grid-gap: 3vw;\n            grid-template-columns: minmax(14vw, 3fr) minmax(2vw, 2fr) minmax(15vw, 4fr);\n            justify-items: center;\n            margin-top: 1.5vh;\n            margin-left: 3vw;\n            margin-right: 3vw;\n        }\n\n        .ssd_cheatName {\n            font-size: 2.5vh;\n            font-family: 'Sigmar One';\n        }\n\n        .ssd_buttons {\n            display: flex;\n            justify-content: center;\n            gap: 5vw;\n        }\n\n        .ssd_button {\n            border: calc(var(--ss-common-border-width)/2) solid var(--ss-blue5);\n            box-shadow: var(--ss-box-shadow-1), var(--ss-btn-dark-bevel) rgb(8,110,141), var(--ss-btn-light-bevel) rgb(0,173,230);\n            border-radius: var(--border-radius);\n            padding: 6px 20px;\n            font-weight: 1000;\n            font-size: 2.25vh;\n            cursor: pointer;\n        }\n\n        .ssd_select {\n            border: calc(var(--ss-common-border-width)/2) solid var(--ss-blue5);\n            box-shadow: var(--ss-box-shadow-1), var(--ss-btn-dark-bevel) rgb(8,110,141), var(--ss-btn-light-bevel) rgb(0,173,230);\n            border-radius: var(--border-radius);\n            padding: 6px 20px;\n            font-weight: 1000;\n            font-size: 2vh;\n            cursor: pointer;\n            background: var(--ss-blue3);\n            color: white;\n            font-family: 'Nunito';\n        }\n\n        .switch {\n            position: relative;\n            display: inline-block;\n            width: 60px;\n            height: calc(4vh + 8px);\n        }\n\n        .switch input {\n            opacity: 0;\n            width: 0;\n            height: 0;\n        }\n\n        .slider {\n            position: absolute;\n            cursor: pointer;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            background-color: #ccc;\n            transition: .4s;\n            border-radius: 34px;\n        }\n\n        .slider:before {\n            position: absolute;\n            content: "";\n            height: 4vh;\n            width: 26px;\n            left: 4px;\n            bottom: 4px;\n            background-color: white;\n            transition: .4s;\n            border-radius: 50%;\n        }\n\n        input:checked + .slider {\n            background-color: #5bc75f;\n        }\n\n        input:focus + .slider {\n            box-shadow: 0 0 1px #5bc75f;\n        }\n\n        input:checked + .slider:before {\n            transform: translateX(26px);\n        }\n    </style>\n        <div class="ssd_container" id="${s.get().guiID}">\n            <div class="ssd_title">ShellShocked</div>\n            <div class="ssd_description">the most advanced hack for shell shockers.</div>\n            <hr class="ssd_divider" />\n            <div class="ssd_header">Cheats</div>\n            <div class="ssd_cheatGrid">\n                <div class="ssd_cheatName">Aimbot</div>\n                <div class="ssd_key">key: ${i.get().aimbot.key.toUpperCase()}</div>\n                <select class="ssd_select" id="${s.get().aimbot}">\n                    <option value="rightMouse">Right Mouse Hold</option>\n                    <option value="trackpad">Trackpad</option>\n                    <option value="on">Always On</option>\n                    <option value="off">Off</option>\n                </select>\n                <div class="ssd_cheatName">ESP</div>\n                <div class="ssd_key">key: ${i.get().esp.key.toUpperCase()}</div>\n                <label class="switch">\n                    <input type="checkbox" checked="${i.get().esp.enabled}" onchange="setVal('esp');" id="${s.get().esp}">\n                    <span class="slider"></span>\n                </label>\n                <div class="ssd_cheatName">ESP Boxes</div>\n                <div class="ssd_key">key: ${i.get().espBoxes.key.toUpperCase()}</div>\n                <label class="switch">\n                    <input type="checkbox" checked="${i.get().espBoxes.enabled}" onchange="setVal('espboxes');" id="${s.get().espboxes}">\n                    <span class="slider"></span>\n                </label>\n                <div class="ssd_cheatName">ESP Lines</div>\n                <div class="ssd_key">key: ${i.get().espLines.key.toUpperCase()}</div>\n                <label class="switch">\n                    <input type="checkbox" checked="${i.get().espLines.enabled}" onchange="setVal('esplines');" id="${s.get().esplines}">\n                    <span class="slider"></span>\n                </label>\n            </div>\n            <hr class="ssd_divider" />\n            <div class="ssd_buttons">\n                <div class="ssd_button" onclick="document.documentElement.requestFullscreen();">Fullscreen</div>\n                <div class="ssd_button" onclick="location.reload();">Reload</div>\n            </div>\n        </div>\n    `),document.getElementById(""+s.get().aimbot).value=i.get().aimbot.enabled,document.getElementById(""+s.get().aimbot).onchange=e=>{let n=e.target.options[e.target.selectedIndex].value,t=i.get();t.aimbot.enabled=n,i.set(t)},document.getElementById(""+s.get().esp).onchange=()=>{let e=i.get();e.esp.enabled=!e.esp.enabled,i.set(e)},document.getElementById(""+s.get().esplines).onchange=()=>{let e=i.get();e.espLines.enabled=!e.espLines.enabled,i.set(e)},document.getElementById(""+s.get().espboxes).onchange=()=>{let e=i.get();e.espBoxes.enabled=!e.espBoxes.enabled,i.set(e)}}()));
})();