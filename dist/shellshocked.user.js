// ==UserScript==
// @name         ShellShocked
// @description  an undetectable cheat for shell shockers.
// @version      1.0.0c
// @icon         https://i.imgur.com/t57csO9.png

// @author       VillainsRule
// @namespace    https://github.com/VillainsRule/ShellShocked

// @match        *://*.shellshock.io/*
// @match        *://*.math.international/*

// @grant none
// @run-at document-start

// ==/UserScript==

(() => {
    (()=>{"use strict";const e=()=>btoa(Math.random().toString(32)),t=new class{guiID=e();aimbot=e();rightmouse=e();esp=e();esplines=e();espboxes=e();onUpdate=e();settingsID=e();constructor(){}get(){return this}},n=new class{settings;constructor(){if(localStorage.getItem("settings"))try{n=JSON.parse(localStorage.getItem("settings"))}catch(e){this.initial()}else this.initial()}initial(){localStorage.removeItem("settings"),this.settings={esp:{enabled:!0,key:"v"},espLines:{enabled:!0,key:"n"},espBoxes:{enabled:!0,key:"m"},aimbot:{enabled:!0,key:"b",rightMouse:{enabled:!0,key:"l"}},menuKey:"h"},this.sync()}sync(){return localStorage.setItem("settings",JSON.stringify(this.settings)),this.get()}get(){return this.settings}set(e){return this.settings=e,this.sync()}};window[t.get().settingsID]=n;const s=n;let i=!1;const o=e=>2===e.button?i="pointerdown"===e.type:"";window.addEventListener("pointerdown",o),window.addEventListener("pointerup",o),s.sync(),async function(){window.XMLHttpRequest=class extends window.XMLHttpRequest{open(e,t){return t.indexOf("shellshock.js")>-1&&(this.isScript=!0),super.open(...arguments)}get response(){if(this.isScript){const e=super.response;let n,s,i,o,a;try{n=/this\.origin=new ([a-zA-Z]+)\.Vector3/.exec(e)[1],s=/([^,]+)=\[\],[^,]+=\[\],{}/.exec(e)[1],i=/"fire":document.pointerLockElement&&([^&]+)&&/.exec(e)[1],o=/createMapCells\(([^,]+),/.exec(e)[1],a=/=([a-zA-Z_$]+)\(this\.mesh,\.[0-9]+\)/.exec(e)[1]}catch(t){return e}return e.replace(o+".render()",`window['${t.get().onUpdate}'](${n},${s},${i});${o}.render()`).replace(`function ${a}`,`function ${a}(){return true;}function someFunctionWhichWillNeverBeUsedNow`).replace(/.prototype.setVisible=function\(\w\){/,`.prototype.setVisible=function(eee){this.getChildTransformNodes().forEach(child=>child.setRenderingGroupId&&child.setRenderingGroupId(window['${t.get().settingsID}'].get().esp.enabled?1:0));`)}return super.response}}}(),window.addEventListener("keyup",(function(e){if(!document.activeElement||"INPUT"!==document.activeElement.tagName)switch(e.key.toLowerCase()){case s.get().menuKey:document.getElementById(t.get().guiID)&&("none"===document.getElementById(t.get().guiID).style.display?document.getElementById(t.get().guiID).style.display="":document.getElementById(t.get().guiID).style.display="none");break;case s.get().aimbot.key:if(!document.getElementById(t.get().aimbot))return;s.get().aimbot.enabled=!s.get().aimbot.enabled,document.getElementById(t.get().aimbot).checked=s.get().aimbot.enabled;break;case s.get().aimbot.rightMouse.key:if(!document.getElementById(t.get().rightmouse))return;s.get().aimbot.rightMouse.enabled=!s.get().aimbot.rightMouse.enabled,document.getElementById(t.get().rightmouse).checked=s.get().aimbot.rightMouse.enabled;break;case s.get().esp.key:if(!document.getElementById(t.get().esp))return;s.get().esp.enabled=!s.get().esp.enabled,document.getElementById(t.get().esp).checked=s.get().esp.enabled;break;case s.get().espLines.key:if(!document.getElementById(t.get().esplines))return;s.get().espLines.enabled=!s.get().espLines.enabled,document.getElementById(t.get().esplines).checked=s.get().espLines.enabled;break;case s.get().espBoxes.key:if(!document.getElementById(t.get().espboxes))return;s.get().espBoxes.enabled=!s.get().espBoxes.enabled,document.getElementById(t.get().espboxes).checked=s.get().espBoxes.enabled}})),async function(){window[t.get().onUpdate]=function(e,t,n){if(!n)return;let o=new e.Vector3,a=[];o.copyFrom(n.actor.mesh.position);const l=n.actor.mesh.rotation.y;o.x+=Math.sin(l),o.z+=Math.cos(l),o.y+=Math.sin(-n.pitch);for(let e=0;e<a.length;e++)a[e].playerExists=!1;for(let i=0;i<t.length;i++){const l=t[i];if(l&&l!==n){if(void 0===l.sphere){const t=new e.StandardMaterial("myMaterial",l.actor.scene);t.emissiveColor=t.diffuseColor=new e.Color3(1,0,0),t.wireframe=!0;const n=e.MeshBuilder.CreateBox("mySphere",{width:.5,height:.75,depth:.5},l.actor.scene);n.material=t,n.position.y=.3,n.parent=l.actor.mesh,l.sphere=n}if(void 0===l.lines){const t={points:[o,l.actor.mesh.position],updatable:!0},n=t.instance=e.MeshBuilder.CreateLines("lines",t,l.actor.scene);n.color=new e.Color3(1,0,0),n.alwaysSelectAsActiveMesh=!0,n.renderingGroupId=1,l.lines=n,l.lineOptions=t,a.push(n)}l.lines.playerExists=!0,l.lines=e.MeshBuilder.CreateLines("lines",l.lineOptions),l.sphere.renderingGroupId=s.get().espBoxes.enabled?1:0,l.sphere.visibility=(s.get().aimbot.enabled||s.get().espBoxes.enabled)&&n!==l&&(0===n.team||n.team!==l.team),l.lines.visibility=l.playing&&l.sphere.visibility&&s.get().espLines.enabled}}for(let e=0;e<a.length;e++)a[e].playerExists||(a[e].dispose(),a.splice(e,1));if(s.get().aimbot.enabled&&(!s.get().aimbot.rightMouse.enabled||i)&&n.playing){let e,s=1/0;for(let i=0;i<t.length;i++){const o=t[i];if(o&&o!==n&&o.playing&&(0===n.team||o.team!==n.team)){const t=Math.hypot(o.x-n.x,o.y-n.y,o.z-n.z);t<s&&(s=t,e=o)}}if(e){const t=e.actor.mesh.position.x-n.actor.mesh.position.x,s=e.actor.mesh.position.y-n.actor.mesh.position.y,i=e.actor.mesh.position.z-n.actor.mesh.position.z;n.yaw=Math.radAdd(Math.atan2(t,i),0),n.pitch=-Math.atan2(s,Math.hypot(t,i))%1.5}}}}(),window.addEventListener("DOMContentLoaded",(()=>async function(){window.setVal=e=>{let t=s.get();"aimbot"===e?t.aimbot.enabled=!t.aimbot.enabled:"rightmouse"===e?t.aimbot.rightMouse.enabled=!t.aimbot.rightMouse.enabled:"esp"===e?t.esp.enabled=!t.esp.enabled:"esplines"===e?t.espLines.enabled=!t.espLines.enabled:"espboxes"===e&&(t.espBoxes.enabled=!t.espBoxes.enabled),s.set(t)},document.body.insertAdjacentHTML("beforeend",`\n        <style>\n        .ss_container {\n            position: absolute;\n            top: 15px;\n            right: 15px;\n            width: 50vw;\n            height: auto;\n            border: var(--ss-border-blue5);\n            background-color: var(--ss-blue3);\n            z-index: 99999;\n            padding: 2vh;\n            text-align: center;\n            border-radius: var(--ss-space-sm);\n            color: var(--ss-white);\n        }\n\n        .ss_title {\n            font-family: 'Sigmar One';\n            font-size: 4vh;\n        }\n\n        .ss_description {\n            font-size: 2.6vh;\n        }\n\n        .ss_divider {\n            width: calc(90%);\n            margin: 2vh 5%;\n        }\n\n        .ss_header {\n            font-size: 2.9vh;\n            font-family: 'Sigmar One';\n        }\n\n        .ss_cheatRow {\n            display: flex;\n            justify-content: center;\n            gap: 5vw;\n            margin-top: 1.5vh;\n        }\n\n        .ss_cheatName {\n            font-size: 2.5vh;\n            font-family: 'Sigmar One';\n        }\n\n        .ss_brokenCheat {\n            color: red;\n            cursor: pointer;\n        }\n\n        .switch {\n            position: relative;\n            display: inline-block;\n            width: 60px;\n            height: calc(4vh + 8px);\n        }\n\n        .switch input {\n            opacity: 0;\n            width: 0;\n            height: 0;\n        }\n\n        .slider {\n            position: absolute;\n            cursor: pointer;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            background-color: #ccc;\n            transition: .4s;\n            border-radius: 34px;\n        }\n\n        .slider:before {\n            position: absolute;\n            content: "";\n            height: 4vh;\n            width: 26px;\n            left: 4px;\n            bottom: 4px;\n            background-color: white;\n            transition: .4s;\n            border-radius: 50%;\n        }\n\n        input:checked + .slider {\n            background-color: #5bc75f;\n        }\n\n        input:focus + .slider {\n            box-shadow: 0 0 1px #5bc75f;\n        }\n\n        input:checked + .slider:before {\n            transform: translateX(26px);\n        }\n    </style>\n        <div class="ss_container" id="${t.get().guiID}">\n            <div class="ss_title">ShellShocked</div>\n            <div class="ss_description">the most advanced hack for shell shockers.</div>\n            <hr class="ss_divider" />\n            <div class="ss_header">Cheats</div>\n            <div class="ss_cheatRow">\n                <div class="ss_cheatName">Aimbot</div>\n                <div class="ss_key">key: ${s.get().aimbot.key.toUpperCase()}</div>\n                <label class="switch">\n                    <input type="checkbox" checked="${s.get().aimbot.enabled}" onchange="setVal('aimbot');" id="${t.get().aimbot}">\n                    <span class="slider round"></span>\n                </label>\n            </div>\n            <div class="ss_cheatRow">\n                <div class="ss_cheatName">Right Mouse Aimbot</div>\n                <div class="ss_key">key: ${s.get().aimbot.rightMouse.key.toUpperCase()}</div>\n                <label class="switch">\n                    <input type="checkbox" checked="${s.get().aimbot.rightMouse.enabled}" onchange="setVal('rightmouse');" id="${t.get().rightmouse}">\n                    <span class="slider round"></span>\n                </label>\n            </div>\n            <div class="ss_cheatRow">\n                <div class="ss_cheatName">ESP</div>\n                <div class="ss_key">key: ${s.get().esp.key.toUpperCase()}</div>\n                <label class="switch">\n                    <input type="checkbox" checked="${s.get().esp.enabled}" onchange="setVal('esp');" id="${t.get().esp}">\n                    <span class="slider round"></span>\n                </label>\n            </div>\n            <div class="ss_cheatRow">\n                <div class="ss_cheatName">ESP Boxes</div>\n                <div class="ss_key">key: ${s.get().espBoxes.key.toUpperCase()}</div>\n                <label class="switch">\n                    <input type="checkbox" checked="${s.get().espBoxes.enabled}" onchange="setVal('espboxes');" id="${t.get().espboxes}">\n                    <span class="slider round"></span>\n                </label>\n            </div>\n            <div class="ss_cheatRow">\n                <div class="ss_cheatName ss_brokenCheat" onclick="alert(\`ESP lines is broken. We're aware of the issue and working to fix it.\`);">ESP Lines</div>\n                <div class="ss_key">key: ${s.get().espLines.key.toUpperCase()}</div>\n                <label class="switch">\n                    <input type="checkbox" checked="${s.get().espLines.enabled}" onchange="setVal('esplines');" id="${t.get().esplines}">\n                    <span class="slider round"></span>\n                </label>\n            </div>\n        </div>\n    `)}()))})();
})();