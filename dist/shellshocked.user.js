// ==UserScript==
// @name         ShellShocked
// @description  the most advanced hack for shell shockers.
// @version      2.0.1
// @icon         https://i.imgur.com/DtD4iJo.png

// @author       VillainsRule
// @namespace    https://github.com/VillainsRule/ShellShocked

// @match        *://*.shellshock.io/
// @match        *://*.math.international/
// @run-at       document-start

// @grant        GM_getValue
// @grant        GM_setValue
// @grant        GM_deleteValue
// @grant        unsafeWindow
// ==/UserScript==

// {{CRACKEDSHELL}}
// {{!CRACKEDSHELL}}

(() => {var e,t,s,n=Object.defineProperty,i=(e,t,s)=>(((e,t,s)=>{t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s})(e,"symbol"!=typeof t?t+"":t,s),s),o=(e,t,s)=>{if(!t.has(e))throw TypeError("Cannot "+s)},a=(e,t,s)=>(o(e,t,"read from private field"),s?s.call(e):t.get(e)),r=(e,t,s)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,s)},c=(e,t,s,n)=>(o(e,t,"write to private field"),n?n.call(e,s):t.set(e,s),s);const d=new class{constructor(){i(this,"createString",(()=>Math.random().toString(36).slice(2))),this.render=this.createString(),this.send=this.createString(),this.leaderboardUpdate=this.createString(),this.onStart=this.createString(),this.onKill=this.createString(),this.onSignOut=this.createString(),this.cheatManager=this.createString(),this.patcher=this.createString(),this.lineOrigin=this.createString(),this.lineArray=this.createString()}};e=new WeakMap;const l=new class{constructor(){i(this,"cheats",{}),i(this,"settings",{}),r(this,e,[]),i(this,"version","4"),i(this,"ignoreSync",!1),i(this,"createCategory",((e,t)=>this.cheats[e]=t||[])),i(this,"createCheat",((e,t,s)=>(this.settings[e]||"button"===t||(this.settings[e]="check"!==t&&("menu"===t?s.default:null)),{name:e,id:d.createString(),type:t||"check",label:"button"===t?s.label:null,options:"menu"===t?s.options:null}))),i(this,"listen",((t,s)=>a(this,e).push({cheat:t,callback:s}))),i(this,"runListeners",((t,s)=>a(this,e).filter((e=>e.cheat===t)).forEach((e=>e.callback(s))))),i(this,"enabled",(e=>this.settings[e])),i(this,"options",(e=>Object.values(this.cheats).flat().find((t=>t.name===e)).options)),i(this,"tick",(e=>{this.settings[e]=!this.settings[e],this.runListeners(e,!!this.settings[e]),this.ignoreSync||this.sync()})),i(this,"select",((e,t)=>{this.settings[e]=t,this.ignoreSync||this.sync()})),i(this,"activate",(e=>this.runListeners(e))),i(this,"reset",(()=>{confirm("Are you sure you want to wipe all of your cheat configuration? This will reload the page!")&&(GM_deleteValue("ssd_settings_"+this.version),this.ignoreSync=!0,setTimeout((()=>location.reload()),500))})),i(this,"sync",(()=>{this.ignoreSync||(Object.keys(this.settings).length?GM_setValue("ssd_settings_"+this.version,this.settings):this.reset())})),this.settings=GM_getValue("ssd_settings_"+this.version)||{}}addCheats(){this.createCategory("Combat",[this.createCheat("Auto Reload"),this.createCheat("Grenade Max")]),this.createCategory("Aimbot",[this.createCheat("Snap Mode","menu",{options:["Right Mouse","Trackpad","Always On","Off"],default:"Off"}),this.createCheat("One Kill")]),this.createCategory("ESP",[this.createCheat("Skin ESP"),this.createCheat("ESP Boxes"),this.createCheat("ESP Lines"),this.createCheat("Nametags")]),this.createCategory("Chat",[this.createCheat("View Filtered"),this.createCheat("Bypass Filter"),this.createCheat("Infinite History")]),this.createCategory("Misc",[this.createCheat("Coordinates"),this.createCheat("Leaderboard Health"),this.createCheat("Block Ads")]),GM_getValue("ssd_settings_"+this.version,null)||GM_setValue("ssd_settings_"+this.version,this.settings),Object.entries(this.settings).forEach((([e,t])=>"boolean"==typeof t&&!0===t&&this.runListeners(e)))}};unsafeWindow[""+d.cheatManager]=l,t=new WeakMap,s=new WeakMap;const h=new class{constructor(){r(this,t,void 0),r(this,s,void 0),i(this,"createListeners",(()=>{const e=e=>2===e.button?c(this,t,"pointerdown"===e.type):"",n=e=>2===e.button?c(this,s,!a(this,s)):"";unsafeWindow.addEventListener("pointerdown",(t=>(e(t),n(t)))),unsafeWindow.addEventListener("pointerup",e),unsafeWindow.addEventListener("keyup",(e=>{"INPUT"!==document.activeElement?.tagName&&"h"===e.key.toLowerCase()&&("none"===document.querySelector(".ssd_container")?.style?.display?document.querySelector(".ssd_container").style.display="":document.querySelector(".ssd_container").style.display="none")}))})),i(this,"mouseDown",(()=>!!a(this,t))),i(this,"trackpadActive",(()=>!!a(this,s))),unsafeWindow[d.onKill]=e=>l.enabled("One Kill")?c(this,s,!1):null}},u=new class{constructor(){i(this,"log",(e=>console.log("%c%s","color:black;background:#FFD700;padding:2px 6px; border-radius:3px;font-weight:1000;margin-right:5px;","ShellShocked",e))),i(this,"error",(e=>console.log("%c%s","color:white;background:red;padding:2px 6px; border-radius:3px;font-weight:1000;margin-right:5px;","ShellShocked",e)))}},p=new class{constructor(){i(this,"keys",{}),i(this,"create",((e,t)=>{t?this.keys[e]=t[1]:u.error(`Key ${e} could not be found.`)})),i(this,"interceptRequest",(()=>{let e=XMLHttpRequest;unsafeWindow.XMLHttpRequest=class extends e{constructor(){super(...arguments),i(this,"url")}open(e,t){return this.url=t,super.open(...arguments)}get response(){return this.url.includes("shellshock.js")?unsafeWindow[d.patcher].patch(super.response):super.response}}})),i(this,"patch",(e=>{let t=e;try{this.create("babylon",/playerCollisionMesh=(.*?)\./.exec(t)),this.create("playerList",/\]\.score-(.*?)\[/.exec(t)),this.create("myPlayer",/"fire":document.pointerLockElement&&([^&]+)&&/.exec(t)),this.create("scene",/\.engine\.stopRenderLoop\(\),(.*?)=/.exec(t)),this.create("cullFunction",/showShareLinkPopup.*?\}function (.*?)\(/.exec(t)),this.create("MeshBuilder",/wedgeCollisionMesh=.*?\.(.*?)\..*?\("",\{size:1\.5\}/.exec(t)),this.create("CreateBox",/\.([a-zA-Z_$0-9]+)\("[^"]+",{si/.exec(t)),this.create("CreateLines",/\.([a-zA-Z_$0-9]+)\("",{po/.exec(t)),this.create("Vector3",/this\.end=new .*?\.(.*?),/.exec(t)),this.create("actor",/this\.([a-zA-Z_$0-9]+)\.[a-zA-Z_$0-9]+\.position,!/.exec(t)),this.create("playing",/OPEN&&[a-zA-Z_$0-9]+\.([a-zA-Z_$0-9]+)/.exec(t)),this.create("yaw",/\*=[a-zA-Z_$0-9]+,[a-zA-Z_$0-9]+\.([a-zA-Z_$0-9]+)=Math\.r/.exec(t)),this.create("pitch",/\),[a-zA-Z_$0-9]+\.([a-zA-Z_$0-9]+)=Math\.max\(Math\.min/.exec(t)),this.create("mesh",/getMeshByName\("ammo"\)\.createInstance\(""\),this\.(.*?)\.setEnabled/.exec(t)),this.create("bodyMesh",/this.shield=0,this\..*?\.(.*?)\.renderOverlay=!1,/.exec(t)),this.create("filterFunction",/\.length>0&&!(.*?)\(/.exec(t)),this.create("health",/Dead=function\(\){return this\.(.*?)</.exec(t)),this.create("leaderboardUpdate",/ActionsPopup\(.*?\)\}\}function (.*?)\(\)/.exec(t)),this.create("chatMessage",/Enter":var (.*?)=/.exec(t)),this.create("adHandler",/\.ready\?\((.*?)\./.exec(t)),this.create("eggGame",/you!"\),(.*?)\(/.exec(t))}catch(s){return u.error("Could not find variables. Error:"),console.error(s),t}return[[this.keys.scene+".render()",`window['${d.render}'](${this.keys.babylon},${this.keys.playerList},${this.keys.myPlayer});${this.keys.scene}.render()`],["function "+this.keys.cullFunction,`function ${this.keys.cullFunction}(){return true;}function oldCull`],[/checkAdBlocker\(\)\{(.*?)\}adBlockerDetected\(\)\{(.*?)\}/,`_cab(){$1}_abd(){$2}checkAdBlocker(){window["${d.cheatManager}"].enabled("Block Ads") ? false : this._cab()}adBlockerDetected(){window["${d.cheatManager}"].enabled("Block Ads") ? false : this._abd()}`],[/showAdBlockerVideo\(\)\{(.*?)1e4\)\}/,`_sabv(){$11e4)}showAdBlockerVideo(){window["${d.cheatManager}"].enabled("Block Ads") ? this.afterVideoAdComplete() : this._sabv()}`],[/!\[".*?"\]\.includes\(([a-zA-Z])\)/,`(window["${d.cheatManager}"].enabled("Block Ads") ? false : !["video-ad-skipped","video-ad-completed"].includes($1))`],[/console.log\("After Game Ready"\)/,`console.log("After Game Ready"),window['${d.onStart}']()`],[/signOut\(\)\.then\(\(function\(\)\{/,`signOut().then((function(){window['${d.onSignOut}']();`],[/vueApp\.killedName=(.*?);/,`vueApp.killedName=$1;window['${d.onKill}']($1);`],[RegExp(`function ${this.keys.filterFunction}\\((.*?)\\){`),`function ${this.keys.filterFunction}($1){if(window['${d.cheatManager}'].enabled('View Filtered')){return false;};`],[/\.value\.trim\(\);/,`.value.trim();${this.keys.chatMessage}=window['${d.send}'](${this.keys.chatMessage});`],[/item"\);(.*?)\.length>4/,`item");$1.length>(window['${d.cheatManager}'].enabled('Infinite History')?999999:4)`],[/=\.3\)\}(.*?)\.innerText=(.*?)\.score,/,`=.3)}$1.innerText=$2.score+\`\${window['${d.cheatManager}'].enabled('Leaderboard Health')?' | ❤️ '+Math.floor($2.${this.keys.health}):''}\`,`],[/\]\.style\.display="none",(.*?)\+\+\}function/,`].style.display='none',$1++}window['${d.leaderboardUpdate}']=${this.keys.leaderboardUpdate};function`],[/=null,console(.*?)18px;"\)/,"=null"],[/Remaining"\)\)\{/,"Remaining\")){if (confirm('You are currently banned from Shell Shockers. Click OK to sign out and remove this ban')) {extern.signOut();}; return;"]].forEach((e=>{let s=t;t=t.replace(e[0],e[1]),t===s&&u.error(`Patch ${e[0]} had no effect.`)})),u.log("Successfully patched shellshock.js."),t}))}};unsafeWindow[d.patcher]=p,unsafeWindow[d.send]=e=>(l.enabled("Bypass Filter")&&(e=["‮"].concat(e.split("").reverse()).join("")),e),l.listen("Coordinates",(e=>[...document.querySelectorAll(".coordinfo")].forEach((t=>t.style.display=e?"":"none")))),unsafeWindow[d.onStart]=()=>{document.querySelector("#readouts").insertAdjacentHTML("beforeend",`\n            <h5 class="coordinfo nospace title" style="display: ${l.enabled("Coordinates")?"":"none"};">coords</h5>\n            <p id="coords" class="coordinfo name" style="display: ${l.enabled("Coordinates")?"":"none"};"></p>\n        `)},unsafeWindow[d.onSignOut]=()=>{Object.keys(localStorage).forEach((e=>localStorage.removeItem(e))),document.cookie="",document.body.insertAdjacentHTML("beforeend",'\n        <div class="popup_window popup_sm roundme_md centered" id="genericPopup" style="">\n            <div>\n                <button class="roundme_sm popup_close clickme">\n                    <i class="fas fa-times text_white fa-2x"></i>\n                </button>\n                <h3 id="popup_title" class="roundme_sm shadow_blue4 nospace text_white">You\'ve been unbanned!</h3>\n            </div>\n            <div class="popup_sm_content">In 15 seconds, the page will reload to confirm your new account being created in the server.</div>\n            <div id="btn_horizontal" class="f_center">\n                <button class="ss_button btn_green bevel_green width_sm" onclick="document.querySelector(\'#genericPopup\').remove();">OK</button>\n            </div>\n        </div>\n    '),setTimeout((()=>location.reload(!0)),15e3)},unsafeWindow.WebSocket.prototype._send=WebSocket.prototype.send,unsafeWindow.WebSocket.prototype.send=function(e){if(e instanceof String)return this._send(e);if(0==e.byteLength)return this._send(e);let t=new Uint8Array(e);if(27===t[0]&&l.enabled("Grenade Max"))return t[1]=255,this._send(t.buffer);this._send(e)},l.listen("Leaderboard Health",(e=>{e?document.head.insertAdjacentHTML("beforeend",'<style id="ssd_lh">\n                .playerSlot--name-score {\n                    width: 16vw;\n                }\n            </style>'):document.querySelector("#ssd_lh")?.remove()})),l.listen("Unban",(async()=>{confirm("Are you sure you want to unban yourself? This will also clear your skins, eggs, and log you out of your account.")&&unsafeWindow.extern.signOut()})),l.addCheats(),h.createListeners(),p.interceptRequest(),unsafeWindow[d.render]=function(e,t,s){if(!s)return;unsafeWindow[d.leaderboardUpdate](),unsafeWindow[d.lineOrigin]||(unsafeWindow[d.lineOrigin]=new e[p.keys.Vector3],unsafeWindow[d.lineArray]=[]);let n=unsafeWindow[d.lineArray],i=unsafeWindow[d.lineOrigin];i.copyFrom(s[p.keys.actor][p.keys.mesh].position),document.querySelector("#coords")&&(document.querySelector("#coords").innerHTML=`${i.x.toFixed(1)}, ${i.y.toFixed(1)}, ${i.z.toFixed(1)}`);const o=s[p.keys.actor][p.keys.mesh].rotation.y;i.x+=Math.sin(o),i.z+=Math.cos(o),i.y+=Math.sin(-s[p.keys.pitch]);for(let a=0;a<n.length;a++)n[a].playerExists=!1;for(let a=0;a<t.length;a++){const o=t[a];if(!o||o===s)continue;if(void 0===o.sphere){const t=new e.StandardMaterial("myMaterial",o[p.keys.actor].scene);t.emissiveColor=t.diffuseColor=new e.Color3(1,0,0),t.wireframe=!0;const s=e[p.keys.MeshBuilder][p.keys.CreateBox]("mySphere",{width:.5,height:.75,depth:.5},o[p.keys.actor].scene);s.material=t,s.position.y=.3,s.parent=o[p.keys.actor][p.keys.mesh],s.renderingGroupId=1,o.sphere=s}if(void 0===o.lines){const t={points:[i,o[p.keys.actor][p.keys.mesh].position],updatable:!0},s=t.instance=e[p.keys.MeshBuilder][p.keys.CreateLines]("lines",t,o[p.keys.actor].scene);s.color=new e.Color3(1,0,0),s.alwaysSelectAsActiveMesh=!0,s.renderingGroupId=1,o.lines=s,o.lineOptions=t,n.push(s)}o.lines.playerExists=!0,o.lines=e[p.keys.MeshBuilder][p.keys.CreateLines]("lines",o.lineOptions);let r=0===s.team||s.team!==o.team;if(o.sphere.visibility=l.enabled("ESP Boxes")&&r,o.lines.visibility=o[p.keys.playing]&&l.enabled("ESP Lines")&&r,o[p.keys.actor][p.keys.bodyMesh].renderingGroupId=l.enabled("Skin ESP")?1:0,l.enabled("Nametags")&&o[p.keys.actor]&&o[p.keys.actor].nameSprite){const e=o[p.keys.actor][p.keys.mesh].position.x-s[p.keys.actor][p.keys.mesh].position.x,t=o[p.keys.actor][p.keys.mesh].position.y-s[p.keys.actor][p.keys.mesh].position.y,n=o[p.keys.actor][p.keys.mesh].position.z-s[p.keys.actor][p.keys.mesh].position.z;o[p.keys.actor].nameSprite._manager.renderingGroupId=1,o[p.keys.actor].nameSprite.renderingGroupId=1;let i=Math.length3(e,t,n),a=2*Math.pow(i,1.25);o[p.keys.actor].nameSprite.width=a/10+.6,o[p.keys.actor].nameSprite.height=a/20+.3,o[p.keys.actor].scene.activeCamera.fov=.75}}for(let a=0;a<n.length;a++)n[a].playerExists||(n[a].dispose(),n.splice(a,1));if(("Always On"===l.enabled("Snap Mode")||"Right Mouse"===l.enabled("Snap Mode")&&h.mouseDown()||"Trackpad"===l.enabled("Snap Mode")&&h.trackpadActive())&&s[p.keys.playing]){let e,n=1/0;for(let i=0;i<t.length;i++){const o=t[i];if(o&&o!==s&&o[p.keys.playing]&&(0===s.team||o.team!==s.team)){const t=o[p.keys.actor][p.keys.mesh].position.x-s[p.keys.actor][p.keys.mesh].position.x,i=o[p.keys.actor][p.keys.mesh].position.y-s[p.keys.actor][p.keys.mesh].position.y,a=o[p.keys.actor][p.keys.mesh].position.z-s[p.keys.actor][p.keys.mesh].position.z,r=Math.hypot(t,i,a);n>r&&(n=r,e=o)}}if(e){const t=e[p.keys.actor][p.keys.mesh].position.x-s[p.keys.actor][p.keys.mesh].position.x,n=e[p.keys.actor][p.keys.mesh].position.y-s[p.keys.actor][p.keys.mesh].position.y,i=e[p.keys.actor][p.keys.mesh].position.z-s[p.keys.actor][p.keys.mesh].position.z;s[p.keys.yaw]=Math.radAdd(Math.atan2(t,i),0),s[p.keys.pitch]=-Math.atan2(n,Math.hypot(t,i))%1.5}}1>s.weapon.ammo.rounds&&l.enabled("Auto Reload")&&s.reload()},unsafeWindow.addEventListener("DOMContentLoaded",(()=>(document.body.insertAdjacentHTML("beforeend",`\n        <style>\n        .ssd_container {\n            position: fixed;\n            top: 15px;\n            right: 15px;\n            width: 350px;\n            height: auto;\n            border: 3px solid #1f1f1f;\n            background-color: #2f2f2ff2;\n            z-index: 99999;\n            padding: 10px;\n            text-align: center;\n            border-radius: 10px;\n            color: #ffffff;\n            font-family: 'Nunito';\n        }\n\n        .ssd_title {\n            font-family: 'Sigmar One';\n            font-size: 23px;\n        }\n\n        .ssd_info {\n            font-weight: bold;\n            font-size: 15px;\n        }    \n\n        .ssd_divider {\n            width: calc(90%);\n            margin: 15px 5%;\n        }\n\n        .ssd_cheatGrid {\n            display: grid;\n            grid-gap: 3vh 1vw;\n            grid-template-columns: minmax(100px, 2fr) minmax(150px, 2fr);\n            justify-items: center;\n            margin: 10px 0;\n            width: 100%;\n        }\n\n        .ssd_category {\n            font-size: 2.5vh;\n            font-weight: 1000;\n            margin: 5px;\n            cursor: pointer;\n        }\n\n        .ssd_cheatName {\n            display: flex;\n            align-items: center;\n            font-size: 2.2vh;\n            font-weight: 1000;\n        }\n\n        .ssd_buttons {\n            display: flex;\n            justify-content: center;\n            gap: 5vw;\n        }\n\n        .ssd_button {\n            border: 1.5px solid #1f1f1f;\n            box-shadow: 5px 5px 10px #1f1f1f;\n            border-radius: 5px;\n            padding: 6px 20px;\n            font-weight: 1000;\n            font-size: 2.25vh;\n            cursor: pointer;\n        }\n\n        .ssd_select {\n            border: 1.5px solid #1f1f1f;\n            border-radius: 5px;\n            padding: 4px 15px;\n            font-weight: 1000;\n            font-size: 2vh;\n            cursor: pointer;\n            background: #1f1f1fcf;\n            color: white;\n            outline: none;\n        }\n\n        .ssd_check {\n            width: 40px; \n            height: 20px;\n            border: 1.5px solid #1f1f1f;\n            cursor: pointer;\n        }\n    </style>\n        <div class="ssd_container">\n            <div class="ssd_title">ShellShocked</div>\n            <div class="ssd_info">press h to open/close this.</div>\n            <hr class="ssd_divider" />\n            <div class="ssd_categoryList">${Object.entries(l.cheats).map((([e,t])=>`\n                        <div class="ssd_category" id="ssd_${e}">${e}</div>\n                        <div class="ssd_cheatGrid" id="ssd_list_${e}" style="display: none;">${t.map((e=>`\n                                    <div class="ssd_cheatName">${e.name}</div>\n                                    ${"check"===e.type?`\n                                        <input type="checkbox" ${l.enabled(e.name)?"checked":""} id="ssd_cheatCheck_${e.id}" class="ssd_check" />\n                                    `:"menu"===e.type?`\n                                        <select class="ssd_select" id="ssd_select_${e.id}">\n                                            ${l.options(e.name).map((t=>`<option ${l.enabled(e.name)===t?"selected":""} value="${t.replaceAll(" ","_")}">${t}</option>`)).join("")}\n                                        </select>\n                                    `:"button"===e.type?`\n                                        <div class="ssd_button" id="ssd_button_${e.id}">${e.label}</div>\n                                    `:""}\n                                `)).join("")}</div>\n                    `)).join("")}</div>\n            <hr class="ssd_divider" />\n            <div class="ssd_buttons">\n                <div class="ssd_button" onclick="window['${d.cheatManager}'].reset();">Reset Cheats</div>\n            </div>\n        </div>\n    `),void Object.entries(l.cheats).map((([e,t])=>{let s=document.querySelector("#ssd_list_"+e);document.querySelector("#ssd_"+e).onclick=()=>""===s.style.display?s.style.display="none":s.style.display="",t.forEach((e=>{"check"===e.type?document.getElementById("ssd_cheatCheck_"+e.id).onchange=()=>l.tick(e.name):"menu"===e.type?document.getElementById("ssd_select_"+e.id).onchange=()=>l.select(e.name,document.querySelector("#ssd_select_"+e.id).value.replaceAll("_"," ")):"button"===e.type&&(document.getElementById("ssd_button_"+e.id).onclick=()=>l.activate(e.name))}))})))));})();